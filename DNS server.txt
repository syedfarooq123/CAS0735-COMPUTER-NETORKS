import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;

public class DnsServer {
    private static final int SERVER_PORT = 9876;
    private static final String SERVER_IP = "127.0.0.1";

    public static void main(String[] args) {
        try (DatagramSocket serverSocket = new DatagramSocket(SERVER_PORT)) {
            System.out.println("DNS Server started on port " + SERVER_PORT);

            byte[] receiveData = new byte[1024];
            byte[] sendData;
            while (true) {
                DatagramPacket receivePacket = new DatagramPacket(receiveData, receiveData.length);
                serverSocket.receive(receivePacket);

                String request = new String(receivePacket.getData(), 0, receivePacket.getLength());
                System.out.println("Received request: " + request);

                InetAddress clientAddress = receivePacket.getAddress();
                int clientPort = receivePacket.getPort();

                String response = getIpFromDns(request);
                sendData = response.getBytes();

                DatagramPacket sendPacket = new DatagramPacket(sendData, sendData.length, clientAddress, clientPort);
                serverSocket.send(sendPacket);

                System.out.println("Sent response: " + response);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private static String getIpFromDns(String hostname) {
        // Replace this with your own logic to retrieve the IP address from the DNS system
        // For demonstration purposes, we simply return a predefined IP address for a few hostnames
        switch (hostname.toLowerCase()) {
            case "example.com":
                return "93.184.216.34";
            case "google.com":
                return "172.217.22.46";
            case "openai.com":
                return "13.225.222.80";
            default:
                return "Unknown hostname";
        }
    }
}
